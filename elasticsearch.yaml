apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  annotations:
    elasticsearch.alpha.elastic.co/autoscaling-spec: |
      {
          "policies": [{
              "name": "hot",
              "roles": ["data_hot", "data_content", "ingest"],
              "deciders": {
                "proactive_storage": {
                    "forecast_window": "5m"
                }
              },
              "resources": {
                  "nodeCount": { "min": 1, "max": 6 },
                  "cpu": { "min": 1, "max": 8 },
                  "memory": { "min": "2Gi", "max": "16Gi" },
                  "storage": { "min": "64Gi", "max": "512Gi" }
              }
          }
          
          ]
      }
spec:
  version: 8.1.3
  monitoring:
    metrics:
      elasticsearchRefs:
        - name: monitoring
          namespace: monitoring
    logs:
      elasticsearchRefs:
        - name: monitoring
          namespace: monitoring
  http:
    service:
      spec:
        selector:
          elasticsearch.k8s.elastic.co/cluster-name: elasticsearch
          elasticsearch.k8s.elastic.co/node-data: "false"
          elasticsearch.k8s.elastic.co/node-data_content: "true"
          elasticsearch.k8s.elastic.co/node-data_frozen: "false"
          elasticsearch.k8s.elastic.co/node-data_hot: "true"
          elasticsearch.k8s.elastic.co/node-data_warm: "false"
          elasticsearch.k8s.elastic.co/node-ingest: "true"
          elasticsearch.k8s.elastic.co/node-master: "false"
          elasticsearch.k8s.elastic.co/node-ml: "false"
          elasticsearch.k8s.elastic.co/node-remote_cluster_client: "false"
          elasticsearch.k8s.elastic.co/node-transform: "false"
          elasticsearch.k8s.elastic.co/node-voting_only: "false"
  nodeSets:
  - name: hot-zone-0
    count: 1
    config:
      node.attr.zone: centralindia-0	
      node.roles: [ data_hot, data_content, ingest ]
      node.store.allow_mmap: false

    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: sc-hot
    podTemplate:
      spec:
        nodeSelector:
          agentpool: hot
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: failure-domain.beta.kubernetes.io/zone
                  operator: In
                  values:
                  - "0"
        containers:
        - name: elasticsearch
          env:
          - name: READINESS_PROBE_TIMEOUT
            value: "10"
          resources:
            requests:
              memory: 4Gi
            limits:
              memory: 4Gi
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - /mnt/elastic-internal/scripts/readiness-probe-script.sh
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 12
            successThreshold: 1
            timeoutSeconds: 12
 
  - name: master-zone-0
    count: 1
    config:
      node.attr.zone: centralindia-0
      node.store.allow_mmap: false
      node.roles: master
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: sc-hot
    podTemplate:
      spec:
        nodeSelector:
          agentpool: hot
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: failure-domain.beta.kubernetes.io/zone
                  operator: In
                  values:
                  - "0"
        containers:
        - name: elasticsearch
          env:
          - name: READINESS_PROBE_TIMEOUT
            value: "10"
          resources:
            requests:
              memory: 2Gi
              cpu: 1
            limits:
              memory: 2Gi
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - /mnt/elastic-internal/scripts/readiness-probe-script.sh
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 12
            successThreshold: 1
            timeoutSeconds: 12

  updateStrategy:
    changeBudget:
      maxSurge: 1
      maxUnavailable: 1

